//Generated by ahl
#include "../Object.h"
#include <memory>
#include <Inc/Objects/Type.h>
using namespace Ailu;
Ailu::Type* Ailu::Z_Construct_Object_Type()
{
static std::unique_ptr<Ailu::Type> cur_type = nullptr;
if(cur_type == nullptr)
{
TypeInitializer initializer;
initializer._name = "Object";
initializer._size = sizeof(Object);
initializer._full_name = "Ailu::Object";
initializer._is_class = true;
initializer._is_abstract = false;
initializer._namespace = "Ailu";
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_name","String", false, false,0,&Object::_name));
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_id","u32", false, false,0,&Object::_id));
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_hash","u64", false, false,0,&Object::_hash));
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_guid","Guid", false, false,0,&Object::_guid));
cur_type = std::make_unique<Ailu::Type>(initializer);
}
return cur_type.get();
}

Ailu::Type* Object::GetPrivateStaticClass()
{
	static Ailu::Type* type = Z_Construct_Object_Type();
	return type;
}

