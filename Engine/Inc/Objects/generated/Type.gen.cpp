//Generated by ahl
#include "../Type.h"
#include <memory>
#include <Inc/Objects/Type.h>
using namespace Ailu;
//Enum EDataType begin...........................
void Z_Construct_Enum_EDataType_Type()
{
static std::unique_ptr<Ailu::Enum> cur_type = nullptr;
if(cur_type == nullptr)
{
EnumInitializer initializer;
initializer._name = "EDataType";
initializer._str_to_enum_lut["kInt8"] = 0;
initializer._str_to_enum_lut["kInt16"] = 1;
initializer._str_to_enum_lut["kInt32"] = 2;
initializer._str_to_enum_lut["kInt64"] = 3;
initializer._str_to_enum_lut["kUInt8"] = 4;
initializer._str_to_enum_lut["kUInt16"] = 5;
initializer._str_to_enum_lut["kUInt32"] = 6;
initializer._str_to_enum_lut["kUInt64"] = 7;
initializer._str_to_enum_lut["kFloat"] = 8;
initializer._str_to_enum_lut["kDouble"] = 9;
initializer._str_to_enum_lut["kVec2"] = 10;
initializer._str_to_enum_lut["kVec3"] = 11;
initializer._str_to_enum_lut["kVec4"] = 12;
initializer._str_to_enum_lut["kVec2Int"] = 13;
initializer._str_to_enum_lut["kVec3Int"] = 14;
initializer._str_to_enum_lut["kVec4Int"] = 15;
initializer._str_to_enum_lut["kChar"] = 16;
initializer._str_to_enum_lut["kBool"] = 17;
initializer._str_to_enum_lut["kString"] = 18;
initializer._str_to_enum_lut["kObject"] = 19;
initializer._str_to_enum_lut["kVoid"] = 20;
initializer._str_to_enum_lut["kPtr"] = 21;
initializer._str_to_enum_lut["kRef"] = 22;
initializer._str_to_enum_lut["kEnum"] = 23;
initializer._str_to_enum_lut["kNone"] = 24;
cur_type = std::make_unique<Ailu::Enum>(initializer);
Ailu::Enum::RegisterEnum(cur_type.get());
}
}
//Enum EDataType end...........................

