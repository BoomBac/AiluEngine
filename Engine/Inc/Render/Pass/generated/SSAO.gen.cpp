//Generated by ahl
#include "../SSAO.h"
#include <memory>
#include <Inc/Objects/Type.h>
using namespace Ailu;
Ailu::Type* Ailu::Z_Construct_SSAO_Type()
{
static std::unique_ptr<Ailu::Type> cur_type = nullptr;
if(cur_type == nullptr)
{
TypeInitializer initializer;
initializer._name = "SSAO";
initializer._size = sizeof(SSAO);
initializer._full_name = "Ailu::SSAO";
initializer._is_class = true;
initializer._is_abstract = false;
initializer._namespace = "Ailu";
initializer._base_name = "Ailu::RenderFeature";
Meta meta_is_cbr;
meta_is_cbr._category="";
meta_is_cbr._min=(float)0;
meta_is_cbr._max=(float)1;
meta_is_cbr._is_range=false;
meta_is_cbr._is_float_range=true;
meta_is_cbr._is_color=false;
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_is_cbr","bool", false, true,offsetof(SSAO,_is_cbr),&SSAO::_is_cbr,meta_is_cbr,false));
Meta meta_is_half_res;
meta_is_half_res._category="";
meta_is_half_res._min=(float)0;
meta_is_half_res._max=(float)1;
meta_is_half_res._is_range=false;
meta_is_half_res._is_float_range=true;
meta_is_half_res._is_color=false;
initializer._properties.emplace_back(MemberInfoInitializer(EMemberType::kProperty,"_is_half_res","bool", false, true,offsetof(SSAO,_is_half_res),&SSAO::_is_half_res,meta_is_half_res,false));
cur_type = std::make_unique<Ailu::Type>(initializer);
Ailu::Type::RegisterType(cur_type.get());
}
return cur_type.get();
}

Ailu::Type* SSAO::GetPrivateStaticClass()
{
	static Ailu::Type* type = Z_Construct_SSAO_Type();
	return type;
}

    const Type *SSAO::GetType() const
{
return SSAO::GetPrivateStaticClass();
}
